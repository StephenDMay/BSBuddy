{"version":3,"sources":["./src/app/record-logs/record-logs.component.html","./src/app/record-logs/record-logs.component.ts","./src/environments/environment.ts","./src/app/add-record/add-record.component.ts","./src/app/add-record/add-record.component.html","./src/app/record-by-date/record-by-date.component.html","./src/app/record-by-date/record-by-date.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/food-tracker/food-tracker.component.ts","./src/app/food-tracker/food-tracker.component.html","./src/app/record/record.component.ts","./src/app/record/record.component.html","./src/app/app-routing.module.ts","./src/app/bs-manager.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGA,2EAA0E;;;IAA/B,6EAAiB;;ACMrD,MAAM,mBAAmB;IAI9B,YAAoB,gBAAmC;QAAnC,qBAAgB,GAAhB,gBAAgB,CAAmB;IAAI,CAAC;IAE5D,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;sFAVU,mBAAmB;mGAAnB,mBAAmB;QDRhC,yEAAqB;QAErB,6HAA0E;QAC1E,4DAAM;;QADyB,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;AEHzC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;ACJ5D,MAAM,kBAAkB;IAM7B,YAAoB,OAAyB,EAAU,MAAe;QAAlD,YAAO,GAAP,OAAO,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAE3E,QAAQ;IACR,CAAC;IAED,SAAS,CAAE,KAAc;QACvB,IAAI,KAAK,GAAY,EAAC,OAAO,EAAG,IAAI,CAAC,OAAO,EAAE,KAAK,EAAC;QACpD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,GAAC,CAAC,CAAC;IAE1F,CAAC;;oFAfU,kBAAkB;kGAAlB,kBAAkB;;QCX/B,yEAAgB;QAEZ,0EAAqB;QAAC,kEAAM;QAAA,4DAAO;QACnC,2EAAyC;QAAtB,uLAAqB;QAAxC,4DAAyC;QACzC,gEAAK;QACL,0EAAqB;QAAC,kEAAM;QAAA,4DAAO;QACnC,kFAAqB;QACjB,4EAAiC;QAAA,4EAAgB;QAAA,4DAAS;QAC1D,6EAAgC;QAAA,2EAAe;QAAA,4DAAS;QACxD,6EAA6B;QAAA,wEAAY;QAAA,4DAAS;QAClD,6EAA4B;QAAA,uEAAW;QAAA,4DAAS;QAChD,6EAA8B;QAAA,yEAAa;QAAA,4DAAS;QACpD,6EAA6B;QAAA,wEAAY;QAAA,4DAAS;QAClD,8EAA6B;QAAA,wEAAY;QAAA,4DAAS;QAClD,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAA+B;QAAA,0EAAc;QAAA,4DAAS;QACtD,8EAA8B;QAAA,yEAAa;QAAA,4DAAS;QACxD,4DAAS;QACT,iEAAK;QAEL,8EAAwD;QAAvC,uRAAS,wBAA4B,IAAC;QAAC,+DAAG;QAAA,4DAAS;QACpE,iEAAK;QACT,4DAAM;;QAnBiB,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;ICApC,2EAA0E;;;IAA/B,6EAAiB;;ACM7D,MAAM,qBAAqB;IAIhC,YAAoB,gBAAmC;QAAnC,qBAAgB,GAAhB,gBAAgB,CAAmB;IAAI,CAAC;IAE5D,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;0FAVU,qBAAqB;qGAArB,qBAAqB;QDRlC,uEAAM;QACF,yEAAqB;QACjB,+HAA0E;QAE9E,4DAAM;QACN,gEAAK;QACL,gEAAK;QACL,yEAAqB;QACjB,uEAAM;QAAA,8EAAmB;QAAA,4DAAO;QAEhC,uEAAM;QAAA,gFAAqB;QAAA,4DAAO;QAEtC,4DAAM;QACV,4DAAO;;QAXgC,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;AEK1C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,0EAAgB;QAChB,uEAAM;QACF,qEAAsB;QACtB,qEAAqD;QACrD,qEAAsE;QACtE,wEAAO;QAAA,2EAAgB;QAAA,4DAAQ;QAEnC,4DAAO;QACP,0EAAgB;QACZ,yEAAQ;QACJ,yEAAiB;QACb,yEAAgB;QAAA,yFAA6B;QAAA,4DAAK;QAGtD,4DAAM;QACV,4DAAS;QAET,4EAA+B;QAEnC,4DAAO;QACP,4DAAO;;;;;;;;;;;;;;ACpBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACa;AACN;AACoB;AACH;AAC5B;AACuC;AACL;;AAoBtE,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;oIAIU,SAAS,mBAhBlB,2DAAY;QACZ,wEAAe;QACf,sFAAmB;QACnB,mFAAkB;QAClB,8FAAqB;QACrB,yFAAoB,aAGpB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;;;;;;;;;;;;;;;;;;;;;;;ACpBf,IAAI,KAAK,GAAG,CAAC,CAAC;AAQP,MAAM,oBAAoB;IAK/B,YAAoB,OAA0B,EAAU,MAAe;QAAnD,YAAO,GAAP,OAAO,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAE5E,QAAQ;IAER,CAAC;IAED,QAAQ;QAEN,+BAA+B;QAE/B,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QAElC,CAAC,CAAC,GAAG,CACD,uGAAuG,QAAQ,EAAE,EACjH,UAAU,IAAI,EAAE,UAAU,EAAE,KAAK;YAC7B,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YAEtD,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAChC,KAAK,IAAI,OAAO,CAAC;YACjB,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC9B,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC;YAC3D,IAAI,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC9C,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,SAAS,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC;YACtC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACpD,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1D,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC3D,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAIpD,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;QAE7D,CAAC,CACJ,CAAC;IAEJ,CAAC;IAED,OAAO,CAAC,UAAmB,EAAE,KAAc;QACzC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,KAAK,GAAU,EAAC,KAAK,EAAE,KAAK,EAAC;QACjC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1C,CAAC;;wFAvDU,oBAAoB;oGAApB,oBAAoB;;QCdjC,0EAAgB;QAEZ,uEAAM;QACF,yEAAqB;QAEjB,sEAA6D;QAC7D,4EAAyC;QAArB,4IAAS,cAAU,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QACtD,gEAAK;QACT,uEAAM;QAAA,0EAAe;QAAA,4DAAO;QAC5B,qEAAwB;QAG5B,4DAAM;QACF,iEAAK;QACL,iEAAK;QACT,0EAAmB;QACf,wEAAM;QACF,8FACJ;QAAA,4DAAO;QACP,yEAA0C;QACtC,iEAAK;QAET,mFAAqB;QACjB,6EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACpC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAS;QACL,iEAAK;QACT,6EAAiF;QAA7D,qWAAS,uCAAkD,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAClG,iEAAK;QAGT,4DAAM;QACV,4DAAO;QAGX,4DAAO;;;;;;;;;;;;;;;;;;AC9BA,MAAM,eAAe;IAI1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCP5B,yEAAsB;QAElB,oEAAG;QAAA,uDAAyE;QAAA,4DAAI;QACpF,4DAAM;QACN,gEAAK;;QAFE,0DAAyE;QAAzE,qKAAyE;;;;;;;;;;;;;;ACDhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACgB;AACM;AACK;AACR;;;AAE1E,MAAM,MAAM,GAAW,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAC;IAC5E,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,mFAAkB,EAAC;IACnD,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8FAAqB,EAAC;IAC/C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAoB,EAAC,CAAC,CAAC;AAM1C,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACnB;AAEG;;;AASxC,MAAM,gBAAgB;IAO3B,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QALrC,YAAO,GAAY,2BAA2B,CAAC;QAC/C,yDAAyD;QACzD,WAAM,GAAY,sGAAsG;QACxH,gBAAW,GAAG,EAAC,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAG,kBAAkB,EAAC,CAAC,EAAC;IAEtC,CAAC;IAG1C,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;aAC3D,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,KAAK,GAAc,EAAE,CAAC;YAC1B,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CACD,CAAC;IAEN,CAAC;IAED,SAAS,CAAC,KAAc;QACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IAGJ,CAAC;IAED,OAAO,CAAC,KAAY;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC;aAChF,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAGD,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACpD,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,KAAK,GAAc,EAAE,CAAC;YAC1B,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAGD,QAAQ,CAAC,IAAa;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aAC7C,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACD,CAAC;IACN,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC;aACzD,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACxB,iEAAU,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,KAAa,CAAC;YAClB,OAAO,+CAAE,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CACD,CAAC;IAEN,CAAC;;gFArFU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;ACX2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["\n<div id=\"recordLogs\">\n    \n<app-record *ngFor=\"let record of records\" [record]=\"record\"></app-record>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsManagerService } from '../bs-manager.service';\nimport { record } from '../record';\n\n@Component({\n  selector: 'app-record-logs',\n  templateUrl: './record-logs.component.html',\n  styleUrls: ['./record-logs.component.css']\n})\nexport class RecordLogsComponent implements OnInit {\n\n  records : record[];\n\n  constructor(private bsManagerService : BsManagerService) { }\n\n  ngOnInit(): void {\n    this.bsManagerService.getAllRecords().subscribe(list => {\n      this.records = list;\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { getLocaleDateFormat, Time } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsManagerService } from '../bs-manager.service';\nimport { record } from '../record';\n\n@Component({\n  selector: 'app-add-record',\n  templateUrl: './add-record.component.html',\n  styleUrls: ['./add-record.component.css']\n})\nexport class AddRecordComponent implements OnInit {\n\n    bsValue: number;\n    \n  \n\n  constructor(private service: BsManagerService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  addRecord( label : string) {\n    let toAdd : record = {bsValue : this.bsValue, label}\n    this.service.addRecord(toAdd).subscribe((_) => {this.router.navigate([\"/allrecords\"])});\n\n  }\n\n}\n","<div id=\"addBS\">\n    \n    <span id=\"textValue\"> Value </span>\n    <input type=\"text\" [(ngModel)]=\"bsValue\">\n    <br/>\n    <span id=\"textValue\"> Label </span>\n    <select #labelSelect>\n        <option value=\"Before Breakfast\">Before Breakfast</option>\n        <option value=\"After Breakfast\">After Breakfast</option>\n        <option value=\"Before Lunch\">Before Lunch</option>\n        <option value=\"After Lunch\">After Lunch</option>\n        <option value=\"Before Dinner\">Before Dinner</option>\n        <option value=\"After Dinenr\">After Dinner</option>\n        <option value=\"Before Snack\">Before Snack</option>\n        <option value=\"Before Bed\">Before Bed</option>\n        <option value=\"Before Workout\">Before Workout</option>\n        <option value=\"After Workout\">After Workout</option>\n    </select>\n    <br/>\n    \n    <button id=\"add\" (click)=\"addRecord(labelSelect.value)\">Add</button>\n    <br/>\n</div>\n","\n<main>\n    <div id=\"dayRecords\">\n        <app-record *ngFor=\"let record of records\" [record]=\"record\"></app-record>\n\n    </div>\n    <br/>\n    <br/>\n    <div id=\"dayRecords\">\n        <span>Daily Carb Intake: </span>\n\n        <span>Average Blood Sugar: </span>\n\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { BsManagerService } from '../bs-manager.service';\nimport { record } from '../record';\n\n@Component({\n  selector: 'app-record-by-date',\n  templateUrl: './record-by-date.component.html',\n  styleUrls: ['./record-by-date.component.css']\n})\nexport class RecordByDateComponent implements OnInit {\n\n  records : record[];\n\n  constructor(private bsManagerService : BsManagerService) { }\n\n  ngOnInit(): void {\n    this.bsManagerService.getByDate().subscribe(list => {\n      this.records = list;\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'diabetes-tracker';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Diabetes Tracker</title>\n    \n</head>\n<body id=\"page\">\n    <header>\n        <div id=\"header\">\n            <h1 id=\"header\">Welcome to Blood Sugar Buddy!</h1>\n\n\n        </div>\n    </header>\n    \n    <router-outlet></router-outlet>\n    \n</body>\n</html>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecordComponent } from './record/record.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RecordLogsComponent } from './record-logs/record-logs.component';\nimport { AddRecordComponent } from './add-record/add-record.component';\nimport {FormsModule} from '@angular/forms';\nimport { RecordByDateComponent } from './record-by-date/record-by-date.component';\nimport { FoodTrackerComponent } from './food-tracker/food-tracker.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecordComponent,\n    RecordLogsComponent,\n    AddRecordComponent,\n    RecordByDateComponent,\n    FoodTrackerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsManagerService } from '../bs-manager.service';\nimport { food } from '../food';\nimport { meal } from '../meal';\n\nlet total = 0;\n\n\n@Component({\n  selector: 'app-food-tracker',\n  templateUrl: './food-tracker.component.html',\n  styleUrls: ['./food-tracker.component.css']\n})\nexport class FoodTrackerComponent implements OnInit {\n  food : food;\n  carbs: number;\n  name: string;\n\n  constructor(private service : BsManagerService, private router : Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  findFood(): void {\n  \n    // add reset function if needed\n  \n    let foodName = $(\"#search\").val();\n\n    $.get(\n        `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=SohihGmRVzAtcLPY0c3Yo2SQsWE8V2992IbSe4VT&query=${foodName}`,\n        function (data, textStatus, jqXHR) {\n            let carbs = `${data.foods[0].foodNutrients[2].value}`;\n            \n            document.getElementById(\"carbs\").textContent = carbs;\n            console.log(data);\n            \n            let carbNum = parseFloat(carbs);\n            total += carbNum;\n            let output = total.toString();\n            document.getElementById(\"totalCarbs\").textContent = output;\n            let name = foodName.toString();\n            let foodItem = document.createElement(\"span\");\n            let carbCount = document.createElement(\"span\");\n            let br = document.createElement(\"br\");\n            foodItem.textContent = name;\n            carbCount.textContent = \" | \" + carbs;\n            document.getElementById(\"showFood\").appendChild(br);\n            document.getElementById(\"showFood\").appendChild(foodItem);\n            document.getElementById(\"showFood\").appendChild(carbCount);\n            document.getElementById(\"showFood\").appendChild(br);\n            \n            \n            \n            document.getElementById(\"carbCount\").textContent = carbs;\n            \n        }\n    );\n  \n  }\n\n  addMeal(totalCarbs : string, label : string, ) {\n    console.log(totalCarbs);\n    let carbs = parseFloat(totalCarbs);\n    console.log(carbs);\n    let toAdd : meal = {carbs, label}\n    this.service.addMeal(toAdd).subscribe();\n  }\n\n}\n\n\n","<body id=\"body\">\n    \n    <main>\n        <div id=\"searchFood\">\n            \n            <input id=\"search\" type=\"text\" placeholder=\"Add a food item\">\n            <button id=\"button\" (click)=\"findFood()\">Add Food</button>\n                <br/>\n            <span>Carbohydrates: </span>\n            <span id=\"carbs\"></span>\n            \n\n        </div>\n            <br/>\n            <br/>\n        <div id=\"showFood\">\n            <span>\n                This meal's total carbohydrates:\n            </span>\n            <span #totalCarbs id=\"totalCarbs\"> </span>\n                <br/>\n\n            <select #labelSelect>\n                <option value=\"Breakfast\">Breakfast</option>\n                <option value=\"Lunch\">Lunch</option>\n                <option value=\"Dinner\">Dinner</option>\n                <option value=\"Snack\">Snack</option>\n            </select>\n                <br/>\n            <button id=\"button\" (click)=\"addMeal(totalCarbs.textContent, labelSelect.value)\">Add meal</button>\n            <br/>\n                \n\n        </div>\n    </main>\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\" integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>\n    \n</body>","import { Component, Input, OnInit } from '@angular/core';\nimport { record } from '../record'\n@Component({\n  selector: 'app-record',\n  templateUrl: './record.component.html',\n  styleUrls: ['./record.component.css']\n})\nexport class RecordComponent implements OnInit {\n\n  @Input()record: record;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"singleValue\">\n    \n    <p>{{record.bsValue}} | {{record.label}} | {{record.date}} | {{record.time}}</p>\n</div>\n<br/>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddRecordComponent } from './add-record/add-record.component';\nimport { FoodTrackerComponent } from './food-tracker/food-tracker.component';\nimport { RecordByDateComponent } from './record-by-date/record-by-date.component';\nimport { RecordLogsComponent } from './record-logs/record-logs.component';\n\nconst routes: Routes = [{path: \"allrecords\", component: RecordLogsComponent},\n{path: \"bloodsugar\", component: AddRecordComponent},\n{path: \"day\", component: RecordByDateComponent},\n{path: \"food\", component: FoodTrackerComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, pipe } from 'rxjs';\nimport { record } from './record';\nimport {tap, catchError} from 'rxjs/operators';\nimport { food } from './food';\nimport { FoodTrackerComponent } from './food-tracker/food-tracker.component';\nimport { meal } from './meal';\nimport { daily } from './daily';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BsManagerService {\n\n  baseUrl : string = \"http://localhost:8080/api\";\n  //url to begin calling food nutrition data, (+ food name)\n  nutUrl : string = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=SohihGmRVzAtcLPY0c3Yo2SQsWE8V2992IbSe4VT&query=\"\n  httpOptions = {headers: new HttpHeaders({\"Content-Type\" : \"application/json\"})}\n\n  constructor(private http : HttpClient) { }\n\n\n  getAllRecords() : Observable<record[]> {\n    return this.http.get<record[]>(this.baseUrl + \"/allrecords\")\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        let empty : record[] = [];\n        return of(empty);\n      })\n      );\n\n  }\n\n  addRecord(toAdd : record) : Observable<record> {\n    console.log(toAdd);\n    return this.http.post<record>(this.baseUrl + \"/bloodsugar\", toAdd, this.httpOptions)\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        return of(null);\n      })\n    );\n\n\n  } \n  \n  addMeal(toAdd : meal) : Observable<meal>{\n    console.log(toAdd);\n    return this.http.post<record>(this.baseUrl + \"/addmeal\", toAdd, this.httpOptions)\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        return of(null);\n      })\n    );\n  }\n  \n\n  getByDate() : Observable<record[]> {\n    return this.http.get<record[]>(this.baseUrl + \"/day\")\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        let empty : record[] = [];\n        return of(empty);\n      })\n    );\n  }\n\n \n  findFood(name : string) : Observable<food>{\n    return this.http.get<food>(this.nutUrl + name)\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        return of(null);\n      })\n      );\n  }\n\n  getDailyValues() : Observable<daily> {\n    return this.http.get<daily>(this.baseUrl + \"/dailyvalues\")\n    .pipe(\n      tap(x => console.log(x)),\n      catchError(err => {\n        console.log(err);\n        let empty : daily;\n        return of(empty);\n      })\n      );\n\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}